openapi: 3.0.0
info:
  title: Authentication API
  version: 1.0.0
  description: Authentication endpoints for dashboard users and employees

paths:
  /api/auth/login:
    post:
      summary: Login for dashboard users and employees
      description: Unified login endpoint that automatically detects user type
      tags:
        - Authentication
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: sagar.km@yulu.bike
                password:
                  type: string
                  format: password
                  example: admin123
      responses:
        200:
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      name:
                        type: string
                      role:
                        type: string
                      userType:
                        type: string
                        enum: [dashboard_user, employee]
        400:
          description: Bad request
        401:
          description: Invalid credentials

  /api/auth/mobile-verify:
    post:
      summary: Mobile employee verification
      description: Authenticate mobile app users with email and employee ID
      tags:
        - Authentication
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - empId
              properties:
                email:
                  type: string
                  format: email
                  example: chinnumalleshchinnu@gmail.com
                empId:
                  type: string
                  example: XPH1884
      responses:
        200:
          description: Verification successful
        401:
          description: Invalid credentials

  /api/auth/verify:
    get:
      summary: Verify JWT token
      tags:
        - Authentication
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
      responses:
        200:
          description: Token is valid
        401:
          description: Invalid or expired token

  /api/auth/logout:
    post:
      summary: Logout user
      tags:
        - Authentication
      responses:
        200:
          description: Logout successful